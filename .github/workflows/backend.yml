name: Backend CI (unit & E2E tests)

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
  workflow_call:

# env:
#   AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
#   AUTH0_ISSUER_BASE_URL: ${{ secrets.AUTH0_ISSUER_BASE_URL }}
#   AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
#   AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v3

    - name: Start docker containers
      env:
        AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
        AUTH0_ISSUER_BASE_URL: ${{ env.AUTH0_ISSUER_BASE_URL }}
        AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
        AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
      run: |
        touch .env
        echo "${{ env.AUTH0_AUDIENCE }}"
        echo "${{ vars.AUTH0_AUDIENCE }}"
        echo "AUTH0_AUDIENCE=${{ secrets.AUTH0_AUDIENCE }}" >> .env
        echo "AUTH0_ISSUER_BASE_URL=${{ env.AUTH0_ISSUER_BASE_URL }}" >> .env
        echo "AUTH0_CLIENT_ID=${{ secrets.AUTH0_CLIENT_ID }}" >> .env
        echo "AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }}" >> .env
        echo "ls -la"
        ls -la
        echo "cat .env"
        cat .env
        docker-compose -f docker-compose-test.yml up --build --detach
        sleep 10  # wait for database to be ready

    - name: Run backend unit tests
      run: docker-compose exec -T backend npm run unit

    - name: Run backend E2E tests
      # with:
      #   AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
      #   AUTH0_ISSUER_BASE_URL: ${{ secrets.AUTH0_ISSUER_BASE_URL }}
      #   AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      #   AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
      run: docker-compose exec -T backend npm run e2e

    # - name: Run frontend E2E tests
    #   run: docker-compose exec -T frontend npm run e2e
